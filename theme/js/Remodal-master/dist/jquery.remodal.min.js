/*! Remodal - v0.1.3 - 2014-03-31
 * https://github.com/VodkaBears/remodal
 * Copyright (c) 2014 VodkaBears; */
!function(a) {
    "use strict";
    function b(b, e) {
        this.settings = a.extend({}, d, e), this.modal = b, this.buildDOM(), this.addEventListeners(), this.index = a[c].lookup.push(this) - 1, this.busy = !1
    }
    var c = "remodal", d = {hashTracking: !0};
    a[c] = {lookup: []};
    var e, f, g = function(a) {
        var b = a.css("transition-duration") || a.css("-webkit-transition-duration") || a.css("-moz-transition-duration") || a.css("-o-transition-duration") || a.css("-ms-transition-duration") || 0, c = a.css("transition-delay") || a.css("-webkit-transition-delay") || a.css("-moz-transition-delay") || a.css("-o-transition-delay") || a.css("-ms-transition-delay") || 0;
        return 1e3 * (parseFloat(b) + parseFloat(c))
    }, h = function() {
        var a = document.createElement("div");
        a.style.visibility = "hidden", a.style.width = "100px", document.body.appendChild(a);
        var b = a.offsetWidth;
        a.style.overflow = "scroll";
        var c = document.createElement("div");
        c.style.width = "100%", a.appendChild(c);
        var d = c.offsetWidth;
        return a.parentNode.removeChild(a), b - d
    }, i = function() {
        a("html, body").addClass(c + "_lock"), a(document.body).css("padding-right", "+=" + h())
    }, j = function() {
        a("html, body").removeClass(c + "_lock"), a(document.body).css("padding-right", "-=" + h())
    };
    b.prototype.buildDOM = function() {
        this.body = a(document.body), this.bg = a("." + c + "-bg"), this.modalClose = a("<a href='#'>").addClass(c + "-close"), this.overlay = a("<div>").addClass(c + "-overlay"), this.modal.hasClass(c) || this.modal.addClass(c), this.modal.css("visibility", "visible"), this.modal.append(this.modalClose), this.overlay.append(this.modal), this.body.append(this.overlay), this.confirm = this.modal.find("." + c + "-confirm"), this.cancel = this.modal.find("." + c + "-cancel");
        var b = g(this.overlay), d = g(this.modal), e = g(this.bg);
        this.td = d > b ? d : b, this.td = e > this.td ? e : this.td
    }, b.prototype.addEventListeners = function() {
        this.modalClose.bind("click." + c, function(a) {
            a.preventDefault(), this.close()
        }.bind(this)), this.cancel.bind("click." + c, function(a) {
            a.preventDefault(), this.modal.trigger("cancel"), this.close()
        }.bind(this)), this.confirm.bind("click." + c, function(a) {
            a.preventDefault(), this.modal.trigger("confirm"), this.close()
        }.bind(this)), a(document).bind("keyup." + c, function(a) {
            27 === a.keyCode && this.close()
        }.bind(this)), this.overlay.bind("click." + c, function(b) {
            var d = a(b.target);
            d.hasClass(c + "-overlay") && this.close()
        }.bind(this))
    }, b.prototype.open = function() {
        if (!this.busy) {
            this.busy = !0, this.modal.trigger("open");
            var b = this.modal.attr("data-" + c + "-id");
            b && this.settings.hashTracking && (f = a(window).scrollTop(), location.hash = b), e && e !== this && (e.overlay.hide(), e.body.removeClass(c + "_active")), e = this, i(), this.overlay.show(), setTimeout(function() {
                this.body.addClass(c + "_active"), setTimeout(function() {
                    this.busy = !1, this.modal.trigger("opened")
                }.bind(this), this.td + 50)
            }.bind(this), 25)
        }
    }, b.prototype.close = function() {
        this.busy || (this.busy = !0, this.modal.trigger("close"), this.settings.hashTracking && this.modal.attr("data-" + c + "-id") === location.hash.substr(1) && (location.hash = "", a(window).scrollTop(f)), this.body.removeClass(c + "_active"), setTimeout(function() {
            this.overlay.hide(), j(), this.busy = !1, this.modal.trigger("closed")
        }.bind(this), this.td + 50))
    }, a && (a.fn[c] = function(d) {
        var e;
        return this.each(function(f, g) {
            var h = a(g);
            h.data(c) || (e = new b(h, d), h.data(c, e.index), e.settings.hashTracking && h.attr("data-" + c + "-id") === location.hash.substr(1) && e.open())
        }), e
    }), a(document).on("click", "[data-" + c + "-target]", function(b) {
        b.preventDefault();
        var d = b.currentTarget, e = d.getAttribute("data-" + c + "-target"), f = a("[data-" + c + "-id=" + e + "]");
        a[c].lookup[f.data(c)].open()
    }), a(document).find("." + c).each(function(b, d) {
        var e = a(d), f = e.data(c + "-options");
        f || (f = {}), e[c](f)
    });
//    var k = function(b, d) {
//        var f = location.hash.replace("#", "");
//        if ("undefined" == typeof d && (d = !0), f) {
//            var g = a("[data-" + c + "-id=" + f + "]");
//            if (g.length) {
//                var h = a[c].lookup[g.data(c)];
//                h && h.settings.hashTracking && h.open()
//            }
//        } else
//            d && e && !e.busy && e.settings.hashTracking && e.close()
//    };
//    a(window).bind("hashchange." + c, k)
}(window.jQuery || window.Zepto);